var _arturopala$elm_monocle$Monocle_Optional$modifyOption = F2(
	function (opt, f) {
		var mf = function (a) {
			return A2(
				_elm_lang$core$Maybe$map,
				function (b) {
					return A2(opt.set, b, a);
				},
				A2(
					_elm_lang$core$Maybe$map,
					f,
					opt.getOption(a)));
		};
		return mf;
	});
var _arturopala$elm_monocle$Monocle_Optional$modify = F2(
	function (opt, f) {
		var mf = function (a) {
			return A2(
				_elm_lang$core$Maybe$withDefault,
				a,
				A3(_arturopala$elm_monocle$Monocle_Optional$modifyOption, opt, f, a));
		};
		return mf;
	});
var _arturopala$elm_monocle$Monocle_Optional$Optional = F2(
	function (a, b) {
		return {getOption: a, set: b};
	});
var _arturopala$elm_monocle$Monocle_Optional$compose = F2(
	function (outer, inner) {
		var getOption = function (a) {
			var _p0 = outer.getOption(a);
			if (_p0.ctor === 'Just') {
				return inner.getOption(_p0._0);
			} else {
				return _elm_lang$core$Maybe$Nothing;
			}
		};
		var set = F2(
			function (c, a) {
				return A2(
					_elm_lang$core$Maybe$withDefault,
					a,
					A2(
						_elm_lang$core$Maybe$map,
						function (b) {
							return A2(outer.set, b, a);
						},
						A2(
							_elm_lang$core$Maybe$map,
							function (b) {
								return A2(inner.set, c, b);
							},
							outer.getOption(a))));
			});
		return A2(_arturopala$elm_monocle$Monocle_Optional$Optional, getOption, set);
	});
var _arturopala$elm_monocle$Monocle_Optional$composeLens = F2(
	function (opt, lens) {
		var getOption = function (a) {
			var _p1 = opt.getOption(a);
			if (_p1.ctor === 'Just') {
				return _elm_lang$core$Maybe$Just(
					lens.get(_p1._0));
			} else {
				return _elm_lang$core$Maybe$Nothing;
			}
		};
		var set = F2(
			function (c, a) {
				return A2(
					_elm_lang$core$Maybe$withDefault,
					a,
					A2(
						_elm_lang$core$Maybe$map,
						function (b) {
							return A2(opt.set, b, a);
						},
						A2(
							_elm_lang$core$Maybe$map,
							function (b) {
								return A2(lens.set, c, b);
							},
							opt.getOption(a))));
			});
		return A2(_arturopala$elm_monocle$Monocle_Optional$Optional, getOption, set);
	});
var _arturopala$elm_monocle$Monocle_Optional$fromPrism = function (prism) {
	var set = F2(
		function (b, _p2) {
			return prism.reverseGet(b);
		});
	return A2(_arturopala$elm_monocle$Monocle_Optional$Optional, prism.getOption, set);
};
var _arturopala$elm_monocle$Monocle_Optional$fromLens = function (lens) {
	var getOption = function (a) {
		return _elm_lang$core$Maybe$Just(
			lens.get(a));
	};
	return A2(_arturopala$elm_monocle$Monocle_Optional$Optional, getOption, lens.set);
};
var _arturopala$elm_monocle$Monocle_Optional$zip = F2(
	function (left, right) {
		var set = F2(
			function (_p4, _p3) {
				var _p5 = _p4;
				var _p6 = _p3;
				return {
					ctor: '_Tuple2',
					_0: A2(left.set, _p5._0, _p6._0),
					_1: A2(right.set, _p5._1, _p6._1)
				};
			});
		var getOption = function (_p7) {
			var _p8 = _p7;
			return function (ma) {
				return A2(
					_elm_lang$core$Maybe$andThen,
					ma,
					function (c) {
						return A2(
							_elm_lang$core$Maybe$map,
							function (d) {
								return {ctor: '_Tuple2', _0: c, _1: d};
							},
							right.getOption(_p8._1));
					});
			}(
				left.getOption(_p8._0));
		};
		return A2(_arturopala$elm_monocle$Monocle_Optional$Optional, getOption, set);
	});
