var _user$project$Spelling$isFirst = function (index) {
	return _elm_lang$core$Native_Utils.eq(index, 0) ? true : false;
};
var _user$project$Spelling$close = _elm_lang$core$Native_Platform.outgoingPort(
	'close',
	function (v) {
		return v;
	});
var _user$project$Spelling$activate = _elm_lang$core$Native_Platform.outgoingPort(
	'activate',
	function (v) {
		return v;
	});
var _user$project$Spelling$initialTabs = _elm_lang$core$Native_Platform.incomingPort(
	'initialTabs',
	_elm_lang$core$Json_Decode$list(
		A2(
			_elm_lang$core$Json_Decode$andThen,
			A2(_elm_lang$core$Json_Decode_ops[':='], 'url', _elm_lang$core$Json_Decode$string),
			function (url) {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					A2(_elm_lang$core$Json_Decode_ops[':='], 'title', _elm_lang$core$Json_Decode$string),
					function (title) {
						return A2(
							_elm_lang$core$Json_Decode$andThen,
							A2(_elm_lang$core$Json_Decode_ops[':='], 'index', _elm_lang$core$Json_Decode$int),
							function (index) {
								return A2(
									_elm_lang$core$Json_Decode$andThen,
									A2(_elm_lang$core$Json_Decode_ops[':='], 'active', _elm_lang$core$Json_Decode$bool),
									function (active) {
										return A2(
											_elm_lang$core$Json_Decode$andThen,
											A2(_elm_lang$core$Json_Decode_ops[':='], 'tabID', _elm_lang$core$Json_Decode$int),
											function (tabID) {
												return A2(
													_elm_lang$core$Json_Decode$andThen,
													A2(_elm_lang$core$Json_Decode_ops[':='], 'favIconUrl', _elm_lang$core$Json_Decode$string),
													function (favIconUrl) {
														return _elm_lang$core$Json_Decode$succeed(
															{url: url, title: title, index: index, active: active, tabID: tabID, favIconUrl: favIconUrl});
													});
											});
									});
							});
					});
			})));
var _user$project$Spelling$TabsList = F6(
	function (a, b, c, d, e, f) {
		return {url: a, title: b, index: c, active: d, tabID: e, favIconUrl: f};
	});
var _user$project$Spelling$Model = F4(
	function (a, b, c, d) {
		return {word: a, suggestions: b, tabs: c, tabIndex: d};
	});
var _user$project$Spelling$init = {
	ctor: '_Tuple2',
	_0: A4(
		_user$project$Spelling$Model,
		'',
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[]),
		0),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Spelling$NoOp = {ctor: 'NoOp'};
var _user$project$Spelling$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Tabs':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{tabs: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Close':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Spelling$close(_p0._0)
				};
			case 'Activate':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Spelling$activate(_p0._0)
				};
			case 'CycleUp':
				var cmd = A3(
					_elm_lang$core$Task$perform,
					function (error) {
						return _user$project$Spelling$NoOp;
					},
					function (_p1) {
						var _p2 = _p1;
						return _user$project$Spelling$NoOp;
					},
					_elm_lang$dom$Dom$focus(
						_elm_lang$core$Basics$toString(model.tabIndex - 1)));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{tabIndex: model.tabIndex - 1}),
					_1: cmd
				};
			case 'CycleDown':
				var cmd = A3(
					_elm_lang$core$Task$perform,
					function (error) {
						return _user$project$Spelling$NoOp;
					},
					function (_p3) {
						var _p4 = _p3;
						return _user$project$Spelling$NoOp;
					},
					_elm_lang$dom$Dom$focus(
						_elm_lang$core$Basics$toString(model.tabIndex + 1)));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{tabIndex: model.tabIndex + 1}),
					_1: cmd
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Spelling$CycleDown = {ctor: 'CycleDown'};
var _user$project$Spelling$CycleUp = {ctor: 'CycleUp'};
var _user$project$Spelling$Activate = function (a) {
	return {ctor: 'Activate', _0: a};
};
var _user$project$Spelling$Close = function (a) {
	return {ctor: 'Close', _0: a};
};
var _user$project$Spelling$onKeyboardEvent = function (tabID) {
	var tagger = function (code) {
		return (_elm_lang$core$Native_Utils.eq(code, 13) || _elm_lang$core$Native_Utils.eq(code, 37)) ? _user$project$Spelling$Activate(tabID) : ((_elm_lang$core$Native_Utils.eq(code, 8) || _elm_lang$core$Native_Utils.eq(code, 39)) ? _user$project$Spelling$Close(tabID) : ((_elm_lang$core$Native_Utils.eq(code, 38) || _elm_lang$core$Native_Utils.eq(code, 9)) ? _user$project$Spelling$CycleUp : (_elm_lang$core$Native_Utils.eq(code, 40) ? _user$project$Spelling$CycleDown : _user$project$Spelling$NoOp)));
	};
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Spelling$toLi = function (tab) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Events$onClick(
				_user$project$Spelling$Activate(tab.tabID)),
				_user$project$Spelling$onKeyboardEvent(tab.tabID),
				_elm_lang$html$Html_Attributes$tabindex(1),
				_elm_lang$html$Html_Attributes$autofocus(
				_user$project$Spelling$isFirst(tab.index)),
				_elm_lang$html$Html_Attributes$class(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'grow tabsli ',
					tab.active ? 'bg-washed-green' : 'bg-washed-blue')),
				_elm_lang$html$Html_Attributes$id(
				_elm_lang$core$Basics$toString(tab.index))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$li,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('list flex flex-row pa2 w-100 items-center')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$img,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$src(tab.favIconUrl),
								_elm_lang$html$Html_Attributes$height(25),
								_elm_lang$html$Html_Attributes$width(25),
								_elm_lang$html$Html_Attributes$class('pl2 pr2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('w-60')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(tab.title)
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('w-20 bg-light-silver red'),
								_elm_lang$html$Html_Events$onClick(
								_user$project$Spelling$Close(tab.tabID))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('X')
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('w-10'),
								_elm_lang$html$Html_Events$onClick(
								_user$project$Spelling$Activate(tab.tabID))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('0')
							]))
					]))
			]));
};
var _user$project$Spelling$tabsList = function (model) {
	return A2(
		_elm_lang$html$Html$ul,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('pa0 flex-column flex self-center w-100')
			]),
		A2(_elm_lang$core$List$map, _user$project$Spelling$toLi, model.tabs));
};
var _user$project$Spelling$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('pa2 w-100 flex flex-column container bg-lightest-blue')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('w-60 self-center ma1 br3'),
						_elm_lang$html$Html_Attributes$tabindex(-1)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('w-40 self-center ma1 br3'),
						_elm_lang$html$Html_Attributes$tabindex(-1)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Check')
					])),
				_user$project$Spelling$tabsList(model)
			]));
};
var _user$project$Spelling$Tabs = function (a) {
	return {ctor: 'Tabs', _0: a};
};
var _user$project$Spelling$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Spelling$initialTabs(_user$project$Spelling$Tabs)
			]));
};
var _user$project$Spelling$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Spelling$init, view: _user$project$Spelling$view, update: _user$project$Spelling$update, subscriptions: _user$project$Spelling$subscriptions})
};
